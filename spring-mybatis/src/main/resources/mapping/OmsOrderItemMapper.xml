<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hsy.com.mybatis.mapper.OmsOrderItemMapper">
  <resultMap id="BaseResultMap" type="hsy.com.mybatis.entity.OmsOrderItem">
    <id column="id" property="id" />
    <result column="order_id" property="orderId" />
    <result column="order_sn" property="orderSn" />
    <result column="product_id" property="productId" />
    <result column="product_pic" property="productPic" />
    <result column="product_name" property="productName" />
    <result column="product_brand" property="productBrand" />
    <result column="product_sn" property="productSn" />
    <result column="product_price" property="productPrice" />
    <result column="product_quantity" property="productQuantity" />
    <result column="product_sku_id" property="productSkuId" />
    <result column="product_sku_code" property="productSkuCode" />
    <result column="product_category_id" property="productCategoryId" />
    <result column="sp1" property="sp1" />
    <result column="sp2" property="sp2" />
    <result column="sp3" property="sp3" />
    <result column="promotion_name" property="promotionName" />
    <result column="promotion_amount" property="promotionAmount" />
    <result column="coupon_amount" property="couponAmount" />
    <result column="integration_amount" property="integrationAmount" />
    <result column="real_amount" property="realAmount" />
    <result column="gift_integration" property="giftIntegration" />
    <result column="gift_growth" property="giftGrowth" />
    <result column="product_attr" property="productAttr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, order_sn, product_id, product_pic, product_name, product_brand, product_sn, 
    product_price, product_quantity, product_sku_id, product_sku_code, product_category_id, 
    promotion_name, promotion_amount, coupon_amount, integration_amount, real_amount, 
    gift_integration, gift_growth, product_attr
  </sql>
  <select id="selectByExample" parameterType="hsy.com.mybatis.entity.OmsOrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <insert id="insert" parameterType="hsy.com.mybatis.entity.OmsOrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_item (order_id, order_sn, product_id, 
      product_pic, product_name, product_brand, 
      product_sn, product_price, product_quantity, 
      product_sku_id, product_sku_code, product_category_id, 
      promotion_name, promotion_amount, coupon_amount, 
      integration_amount, real_amount, gift_integration, 
      gift_growth, product_attr)
    values (#{orderId,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT}, 
      #{productPic,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productBrand,jdbcType=VARCHAR}, 
      #{productSn,jdbcType=VARCHAR}, #{productPrice,jdbcType=DECIMAL}, #{productQuantity,jdbcType=INTEGER}, 
      #{productSkuId,jdbcType=BIGINT}, #{productSkuCode,jdbcType=VARCHAR}, #{productCategoryId,jdbcType=BIGINT}, 
      #{promotionName,jdbcType=VARCHAR}, #{promotionAmount,jdbcType=DECIMAL}, #{couponAmount,jdbcType=DECIMAL}, 
      #{integrationAmount,jdbcType=DECIMAL}, #{realAmount,jdbcType=DECIMAL}, #{giftIntegration,jdbcType=INTEGER}, 
      #{giftGrowth,jdbcType=INTEGER}, #{productAttr,jdbcType=VARCHAR})
  </insert>


  <insert id="insertList">
    insert into oms_order_item (order_id, order_sn, product_id,
    product_pic, product_name, product_brand,
    product_sn, product_price, product_quantity,
    product_sku_id, product_category_id, product_sku_code,
    sp1, sp2, sp3, promotion_name,
    promotion_amount, coupon_amount, integration_amount,
    real_amount) values
    <foreach collection="list" item="item" separator="," index="index">
      (#{item.orderId,jdbcType=BIGINT}, #{item.orderSn,jdbcType=VARCHAR}, #{item.productId,jdbcType=BIGINT},
      #{item.productPic,jdbcType=VARCHAR}, #{item.productName,jdbcType=VARCHAR}, #{item.productBrand,jdbcType=VARCHAR},
      #{item.productSn,jdbcType=VARCHAR}, #{item.productPrice,jdbcType=DECIMAL}, #{item.productQuantity,jdbcType=INTEGER},
      #{item.productSkuId,jdbcType=BIGINT}, #{item.productCategoryId,jdbcType=BIGINT}, #{item.productSkuCode,jdbcType=VARCHAR},
      #{item.sp1,jdbcType=VARCHAR}, #{item.sp2,jdbcType=VARCHAR}, #{item.sp3,jdbcType=VARCHAR},
      #{item.promotionName,jdbcType=VARCHAR},
      #{item.promotionAmount,jdbcType=DECIMAL}, #{item.couponAmount,jdbcType=DECIMAL},
      #{item.integrationAmount,jdbcType=DECIMAL},
      #{item.realAmount,jdbcType=DECIMAL})
    </foreach>
  </insert>
</mapper>