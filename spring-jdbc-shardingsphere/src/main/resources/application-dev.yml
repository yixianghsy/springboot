server:
  error:
    include-stacktrace: always
spring:
  shardingsphere:
    datasource:
      names: ds-master-0,ds-slave-0-1,ds-slave-0-2,ds-master-1,ds-slave-1-1,ds-slave-1-2
      ds-master-0:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        initial-size: 5
        maxActive: 20
        maxPoolPreparedStatementPerConnectionSize: 20
        maxWait: 60000
        min-idle: 5
        minEvictableIdleTimeMillis: 300000
        password: root
        poolPreparedStatements: true
        testOnBorrow: false
        testOnReturn: false
        testWhileIdle: true
        timeBetweenEvictionRunsMillis: 60000
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
        validationQuery: 'SELECT 1 '
      ds-slave-0-1:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
      ds-slave-0-2:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
      ds-master-1:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
      ds-slave-1-1:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
      ds-slave-1-2:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        driver-class-name: com.mysql.cj.jdbc.Driver
        filters: stat,wall,log4j2
        password: root
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.10.251:3306/mybatisdemo?characterEncoding=utf-8
        username: root
    props:
      sql:
        show: true
    sharding:
# ====================== ↓↓↓↓↓↓ 分库分表配置 ↓↓↓↓↓↓ ======================
      binding‐tables:
        - oms_order
        - oms_order_item
      tables:
        oms_order:
          actual-data-nodes: ds-master-$->{0..1}.oms_order_$->{0..1}
          database-strategy:
            inline:
              algorithm-expression: ds-master-$->{id % 2 }
              sharding-column: id
          key-generator:
            column: id
            props:
              worker:
                id: 1
            type: SNOWFLAKE
          table-strategy:
            inline:
              algorithm-expression: oms_order_$->{id % 2}
              sharding-column: id
        oms_order_item:
          actual-data-nodes: ds-master-$->{0..1}.oms_order_item_$->{0..1}
          table-strategy:
            inline:
              algorithm-expression: oms_order_item_$->{order_id % 2}
              sharding-column: order_id
      #默认数据源
#      default-data-source-name: saleorder02
# ====================== ↓↓↓↓↓↓ 读写分离配置 ↓↓↓↓↓↓ ======================
#      master-slave-rules:
#        ds-master-0:
#          # 主库
#          masterDataSourceName: ds-master-0
#          # 从库
#          slaveDataSourceNames:
#            - ds-slave-0-1
#            - ds-slave-0-2
#          # 从库查询数据的负载均衡算法 目前有2种算法 round_robin（轮询）和 random（随机）
#          # 算法接口 org.apache.shardingsphere.spi.masterslave.MasterSlaveLoadBalanceAlgorithm
#          # 实现类 RandomMasterSlaveLoadBalanceAlgorithm 和 RoundRobinMasterSlaveLoadBalanceAlgorithm
#          loadBalanceAlgorithmType: ROUND_ROBIN
#        ds-master-1:
#          masterDataSourceName: ds-master-1
#          slaveDataSourceNames:
#            - ds-slave-1-1
#            - ds-slave-1-2
#          loadBalanceAlgorithmType: ROUND_ROBIN

#      default-database-strategy:
#        standard:
#          precise-algorithm-class-name: com.shardingdruid.demo.algorithm.DatabasePreciseShardingAlgorithm
#          sharding-column: orderId
#      tables:
#        t_order:
#          actual-data-nodes: saleorder0$->{1..1}.t_order_$->{1..2},saleorder0$->{2..2}.t_order_$->{3..4}
#          table-strategy:
#            standard:
#              precise-algorithm-class-name: com.shardingdruid.demo.algorithm.OrderTablePreciseShardingAlgorithm
#              sharding-column: orderId